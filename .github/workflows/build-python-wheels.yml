# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Python Package Wheels

on:
  release:
    types: [push]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-on-ubuntu:
    permissions:
      id-token: write

    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
      max-parallel: 2

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: actions-rs/toolchain@v1.0.6
      with:
          toolchain: stable
          override: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build and test
      working-directory: ./lib
      run: |
        cargo check
        cargo build

    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.1
      with:
        version: 1.57.0

    - name: Install cbindgen
      uses: actions-rs/cargo@v1.0.1
      with:
        command: install
        args: cbindgen

    - name: Install Python dependencies
      run: |
        python -m pip install -e ./python[dev]

    - name: Setup C API build
      run: |
        mkdir -p build
        cd build
        # specify C compiler as conan could not find it automatically
        # see https://github.com/conan-io/conan/issues/4322
        cmake -DPython3_EXECUTABLE=`which python` -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=Release ..

    - name: Build C API
      working-directory: ./build
      run: |
        set -e
        sudo apt install -y chrpath
        make
        chrpath -d ./python/*.so  ./c/cargo/*.so
        cp ./python/*.so  ./c/cargo/*.so ../python/hyperon

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      working-directory: ./python
      run: |
        python -m build
        tar zcf ${{ matrix.python-version }}.tar.gz dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist.tar.gz
        path: ./python/${{ matrix.python-version }}.tar.gz

