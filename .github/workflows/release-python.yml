# This workflow builds Python distribution packages using cibuildwheel tool and
# environment and publishes packages as a part of a GitHub release.

# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.

name: Build Python Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Flag to create a pre-release'
        default: true
        required: false
        type: boolean
  release:
    types: [published]


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11]
      max-parallel: 3

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - run: |
          echo "GITHUB_REF_NAME=${{github.ref_name}}" | tee $GITHUB_ENV
          echo "GITHUB_EVENT_NAME=${{github.event_name}}" | tee $GITHUB_ENV
          echo "GITHUB_PRERELEASE=${{github.event.release.prerelease}}" | tee $GITHUB_ENV
          echo "GITHUB_TAG_NAME=${{github.event.release.tag_name}}" | tee $GITHUB_ENV
          echo "GITHUB_SHA=${{GITHUB_SHA}}"

      - name: Build wheels on ${{ matrix.os }}
        uses: pypa/cibuildwheel@v2.13.1
        env:
          CIBW_BEFORE_ALL: sh -c "./python/install-hyperonc.sh -u https://github.com/${{github.repository}}.git -r ${{env.GITHUB_SHA}}"
          CIBW_BUILD: cp37-*  # For test
          CIBW_SKIP: "*musllinux*"
        with:
          package-dir: ./python

      - name: Publish Artifacts on GitHub Release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./wheelhouse/*.whl
          tag: ${{ github.ref_name }}
          prerelease: ${{ inputs.prerelease }}
          overwrite: true
          file_glob: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-wheels
          path: ./wheelhouse/*.whl

  publish-test-pypi:
    name: Publish to Test PyPI
    permissions:
      id-token: write
    environment:
      name: test
    runs-on: ubuntu-latest
    needs: [build_wheels]
    #if: (github.event_name == 'release' && github.event.action == 'published') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: python-wheels
        path: dist
    - name: Publish package distributions to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    name: Publish to PyPI
    permissions:
      id-token: write
    environment:
      name: production
    runs-on: ubuntu-latest
    needs: [build_wheels]
    #if: (github.event_name == 'release' && github.event.action == 'published') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: python-wheels
        path: dist
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
