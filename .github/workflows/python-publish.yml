# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  ubuntu-deploy:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1.0.6
      with:
          toolchain: stable
          override: true
    - name: Build and test
      working-directory: ./lib
      run: |
        cargo check
        cargo build
        RUST_LOG=hyperon=debug cargo test
    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.1
      with:
        version: 1.57.0

    - name: Install cbindgen
      uses: actions-rs/cargo@v1.0.1
      with:
        command: install
        args: cbindgen

    - name: Install Python dependencies
      run: |
        python3 -m pip install -e ./python[dev]

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      working-directory: ./python
      run: python -m build
    - name: Publish package
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        packages-dir: python/dist/
