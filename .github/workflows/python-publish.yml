# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      publish_to_pypi:
        description: 'Publish the python package to pypi'
        required: true
        type: boolean
      test_site:
        description: 'Publish to pypi test site'
        required: true
        type: boolean

permissions:
  contents: read

jobs:
  build-on-ubuntu:
    permissions:
      id-token: write

    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        fail-fast: true
        max-parallel: 1

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: actions-rs/toolchain@v1.0.6
      with:
          toolchain: stable
          override: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build and test
      working-directory: ./lib
      run: |
        cargo check
        cargo build

    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.1
      with:
        version: 1.57.0

    - name: Install cbindgen
      uses: actions-rs/cargo@v1.0.1
      with:
        command: install
        args: cbindgen

    - name: Install Python dependencies
      run: |
        python3 -m pip install -e ./python[dev]

    - name: Setup C API build
      run: |
        mkdir -p build
        cd build
        # specify C compiler as conan could not find it automatically
        # see https://github.com/conan-io/conan/issues/4322
        cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=Release ..

    - name: Build C API
      working-directory: ./build
      run: |
        set -e
        sudo apt install -y chrpath
        make
        chrpath -d ./python/*.so  ./c/cargo/*.so
        cp ./python/*.so  ./c/cargo/*.so ../python/hyperon

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      working-directory: ./python
      run: |
        python -m build

    - name: Publish package to pypi
      if: startsWith(github.ref, 'refs/tags') && ${{ inputs.publish_to_pypi }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: python/dist/

    - name: Publish package to test pypi
      if: startsWith(github.ref, 'refs/tags') && ${{ inputs.publish_to_pypi }} && ${{ inputs.test_site }} 
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        packages-dir: python/dist/

